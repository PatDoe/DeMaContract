{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract CakeToken",
						"name": "_cake",
						"type": "address"
					},
					{
						"internalType": "contract SyrupBar",
						"name": "_syrup",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_devaddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_cakePerBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startBlock",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EmergencyWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BONUS_MULTIPLIER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_allocPoint",
						"type": "uint256"
					},
					{
						"internalType": "contract IBEP20",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_withUpdate",
						"type": "bool"
					}
				],
				"name": "add",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cake",
				"outputs": [
					{
						"internalType": "contract CakeToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cakePerBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_devaddr",
						"type": "address"
					}
				],
				"name": "dev",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devaddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "enterStaking",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_from",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_to",
						"type": "uint256"
					}
				],
				"name": "getMultiplier",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "leaveStaking",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "massUpdatePools",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "migrate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "migrator",
				"outputs": [
					{
						"internalType": "contract IMigratorChef",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "pendingCake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "poolInfo",
				"outputs": [
					{
						"internalType": "contract IBEP20",
						"name": "lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "allocPoint",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastRewardBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "accCakePerShare",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_allocPoint",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_withUpdate",
						"type": "bool"
					}
				],
				"name": "set",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IMigratorChef",
						"name": "_migrator",
						"type": "address"
					}
				],
				"name": "setMigrator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "syrup",
				"outputs": [
					{
						"internalType": "contract SyrupBar",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalAllocPoint",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "multiplierNumber",
						"type": "uint256"
					}
				],
				"name": "updateMultiplier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					}
				],
				"name": "updatePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rewardDebt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Cake/MasterChef.sol": "MasterChef"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol": {
			"keccak256": "0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b",
				"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol": {
			"keccak256": "0xe4099b9c99c22b28d8c1676803e2ff6f34ddc043d1e8631476e8e417c81aa7a3",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://dc140c98056178b731be974f42d523134258162fdf379ef6ed2eeb234fc067df",
				"dweb:/ipfs/QmZNQ3FNYS17E2HjyX4eqk7RYfSJtaG5b47W27xatJjNeo"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol": {
			"keccak256": "0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517",
			"license": "MIT",
			"urls": [
				"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a",
				"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol": {
			"keccak256": "0x0442404a56112b52de7e4a64eb0d9fe346add08d122b52e848e43c9f22d707c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://abbecb866acdd459f567efac348a519758c46ca0b53415c484b28b2d28c7b19f",
				"dweb:/ipfs/Qmdo86JSfRcqoMr6Z2H3k1NMZQ6qZCSvSihzCb5Eq7d8DJ"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol": {
			"keccak256": "0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1",
				"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/SafeBEP20.sol": {
			"keccak256": "0xaf7a7cce5c7e15107bdb2c074331471d301e2766dac8942cf92f0298df7cd0b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://1b658c964602f8144999d0fe08f9dcd0494abfeeb839e9d54812d690c10c21ca",
				"dweb:/ipfs/QmYNVqdu4QjwDKQ5K7ATwhByPoae1uKMguxmoCRKnc8QmP"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol": {
			"keccak256": "0x806c8686fdf1afac78d0828ca7941e5ac30282a358d23cf502ec39893c64d4af",
			"license": "MIT",
			"urls": [
				"bzz-raw://be41cfa7e8aaf4c95e1517007964cef2470abd47ad578293db4cd25434ee77ea",
				"dweb:/ipfs/QmPX9qcHJNv1vA6Nxue8c46wxdXwKdLcUyXxEQ91F93u7a"
			]
		},
		"contracts/Cake/CakeToken.sol": {
			"keccak256": "0xb7f7f8aafeae591c276cef3596e9df542d837cd1ac5434c3136724cb639e3af5",
			"urls": [
				"bzz-raw://1be0bc341c0863333e2c62bad6d503e05cdf7c8e1475d1c03a6a2a3de0defdf0",
				"dweb:/ipfs/QmWNmtPhceXq6V9UBvxiiLCWDEwBjX26HGLq5oPwPgjjNx"
			]
		},
		"contracts/Cake/MasterChef.sol": {
			"keccak256": "0xe5eeab9128ebb1e88bd6ed6c1a0794e3030c538bb884e5f994d2ccae35257bf7",
			"urls": [
				"bzz-raw://ddb6c88ce5b14240c3249083d41ba84c3b014403b700692a0db7ccee3536df60",
				"dweb:/ipfs/QmQTk5Q6YmzjNNRLyYivsEh89RLSBBF3xZMammynHyuqnu"
			]
		},
		"contracts/Cake/SyrupBar.sol": {
			"keccak256": "0x592f9efc782956083feb88adff80b8bb10c2f6a5077a05f6696e3f58ba88aa73",
			"urls": [
				"bzz-raw://4f89a8ff703b442da7937415b39b267db7e812d4d10374d74d5611f3761dcfb7",
				"dweb:/ipfs/QmWrnBSAJ8Kv5G5aWNEccAyPFmHC9kMfjbCeV2r8bQPpy6"
			]
		}
	},
	"version": 1
}